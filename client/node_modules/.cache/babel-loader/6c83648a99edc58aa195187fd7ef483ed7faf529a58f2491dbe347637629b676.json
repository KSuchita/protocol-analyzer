{"ast":null,"code":"var _jsxFileName = \"D:\\\\protocol-analyzer\\\\client\\\\src\\\\pages\\\\PerformanceEngine.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport SimulateForm from '../components/SimulateForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PerformanceEngine() {\n  _s();\n  const [metrics, setMetrics] = useState([]);\n  useEffect(() => {\n    const fetchMetrics = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/metrics/collect');\n        setMetrics(res.data);\n      } catch (err) {\n        console.error('Error fetching metrics:', err);\n      }\n    };\n    fetchMetrics();\n    const interval = setInterval(fetchMetrics, 5000); // Poll every 5s\n    return () => clearInterval(interval);\n  }, []);\n  const chartData = {\n    labels: metrics.map(m => new Date(m.timestamp).toLocaleTimeString()),\n    datasets: [{\n      label: 'Throughput (kbps)',\n      data: metrics.map(m => m.throughput),\n      borderColor: 'green',\n      fill: false\n    }, {\n      label: 'Packet Loss (%)',\n      data: metrics.map(m => m.packetLoss),\n      borderColor: 'red',\n      fill: false\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(PerformanceEngine, \"3FqZ41HS/PZEpujpm699BM0f8kU=\");\n_c = PerformanceEngine;\nexport default PerformanceEngine;\nvar _c;\n$RefreshReg$(_c, \"PerformanceEngine\");","map":{"version":3,"names":["React","useEffect","useState","axios","Line","SimulateForm","jsxDEV","_jsxDEV","PerformanceEngine","_s","metrics","setMetrics","fetchMetrics","res","get","data","err","console","error","interval","setInterval","clearInterval","chartData","labels","map","m","Date","timestamp","toLocaleTimeString","datasets","label","throughput","borderColor","fill","packetLoss","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/protocol-analyzer/client/src/pages/PerformanceEngine.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Line } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\nimport SimulateForm from '../components/SimulateForm';\r\n\r\nfunction PerformanceEngine() {\r\n  \r\n  const [metrics, setMetrics] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchMetrics = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/metrics/collect');\r\n        setMetrics(res.data);\r\n      } catch (err) {\r\n        console.error('Error fetching metrics:', err);\r\n      }\r\n    };\r\n\r\n    fetchMetrics();\r\n    const interval = setInterval(fetchMetrics, 5000); // Poll every 5s\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const chartData = {\r\n    labels: metrics.map(m => new Date(m.timestamp).toLocaleTimeString()),\r\n    datasets: [\r\n      {\r\n        label: 'Throughput (kbps)',\r\n        data: metrics.map(m => m.throughput),\r\n        borderColor: 'green',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Packet Loss (%)',\r\n        data: metrics.map(m => m.packetLoss),\r\n        borderColor: 'red',\r\n        fill: false,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PerformanceEngine;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAO,eAAe;AACtB,OAAOC,YAAY,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAE3B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,2CAA2C,CAAC;QACxEH,UAAU,CAACE,GAAG,CAACE,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;MAC/C;IACF,CAAC;IAEDJ,YAAY,CAAC,CAAC;IACd,MAAMO,QAAQ,GAAGC,WAAW,CAACR,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;IAClD,OAAO,MAAMS,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,SAAS,GAAG;IAChBC,MAAM,EAAEb,OAAO,CAACc,GAAG,CAACC,CAAC,IAAI,IAAIC,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;IACpEC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,mBAAmB;MAC1Bf,IAAI,EAAEL,OAAO,CAACc,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACM,UAAU,CAAC;MACpCC,WAAW,EAAE,OAAO;MACpBC,IAAI,EAAE;IACR,CAAC,EACD;MACEH,KAAK,EAAE,iBAAiB;MACxBf,IAAI,EAAEL,OAAO,CAACc,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACS,UAAU,CAAC;MACpCF,WAAW,EAAE,KAAK;MAClBC,IAAI,EAAE;IACR,CAAC;EAEL,CAAC;EAED,oBACE1B,OAAA;IAAK4B,SAAS,EAAC;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAErB,CAAC;AAEV;AAAC9B,EAAA,CA1CQD,iBAAiB;AAAAgC,EAAA,GAAjBhC,iBAAiB;AA4C1B,eAAeA,iBAAiB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}