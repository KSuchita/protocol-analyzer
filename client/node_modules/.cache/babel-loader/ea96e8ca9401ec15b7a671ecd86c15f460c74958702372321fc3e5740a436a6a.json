{"ast":null,"code":"var _jsxFileName = \"D:\\\\protocol-analyzer\\\\client\\\\src\\\\pages\\\\MetricsCollector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MetricsCollector() {\n  _s();\n  const [metrics, setMetrics] = useState([]);\n  const [alerts, setAlerts] = useState([]);\n  useEffect(() => {\n    const fetchMetrics = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/metrics/collect');\n        const latestMetrics = res.data.slice(-10); // last 10\n        setMetrics(latestMetrics);\n\n        // --- Alert logic ---\n        const newAlerts = [];\n        latestMetrics.forEach((m, i) => {\n          if (m.delay > 100) newAlerts.push(`High delay detected: ${m.delay} ms at t${i + 1}`);\n          if (m.packetLoss > 3) newAlerts.push(`Packet loss high: ${m.packetLoss}% at t${i + 1}`);\n          if (m.throughput < 200) newAlerts.push(`Throughput low: ${m.throughput} kbps at t${i + 1}`);\n        });\n        setAlerts(newAlerts);\n      } catch (err) {\n        console.error('Error fetching metrics:', err);\n      }\n    };\n    fetchMetrics();\n    const interval = setInterval(fetchMetrics, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  const labels = metrics.map((_, i) => `t${i + 1}`);\n  const createChart = (label, data, color) => ({\n    labels,\n    datasets: [{\n      label,\n      data,\n      borderColor: color,\n      backgroundColor: `${color}33`,\n      fill: true,\n      tension: 0.3\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDCCA Metrics Collector (Live)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), alerts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alerts-container\",\n      children: alerts.map((a, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert-box\",\n        children: a\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), metrics.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"charts-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Throughput (kbps)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            data: createChart('Throughput', metrics.map(m => m.throughput), '#28a745')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Delay (ms)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            data: createChart('Delay', metrics.map(m => m.delay), '#007bff')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"charts-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Packet Loss (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            data: createChart('Packet Loss', metrics.map(m => m.packetLoss), '#dc3545')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Retransmissions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            data: createChart('Retransmissions', metrics.map(m => m.retransmissions), '#fd7e14')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading metrics...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(MetricsCollector, \"oZ1Qjx9P4vLzOGcp0QKe1WdXQoM=\");\n_c = MetricsCollector;\nexport default MetricsCollector;\nvar _c;\n$RefreshReg$(_c, \"MetricsCollector\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Line","jsxDEV","_jsxDEV","Fragment","_Fragment","MetricsCollector","_s","metrics","setMetrics","alerts","setAlerts","fetchMetrics","res","get","latestMetrics","data","slice","newAlerts","forEach","m","i","delay","push","packetLoss","throughput","err","console","error","interval","setInterval","clearInterval","labels","map","_","createChart","label","color","datasets","borderColor","backgroundColor","fill","tension","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","a","retransmissions","_c","$RefreshReg$"],"sources":["D:/protocol-analyzer/client/src/pages/MetricsCollector.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { Line } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\n\r\nfunction MetricsCollector() {\r\n  const [metrics, setMetrics] = useState([]);\r\n  const [alerts, setAlerts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchMetrics = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/metrics/collect');\r\n        const latestMetrics = res.data.slice(-10); // last 10\r\n        setMetrics(latestMetrics);\r\n\r\n        // --- Alert logic ---\r\n        const newAlerts = [];\r\n        latestMetrics.forEach((m, i) => {\r\n          if (m.delay > 100) newAlerts.push(`High delay detected: ${m.delay} ms at t${i + 1}`);\r\n          if (m.packetLoss > 3) newAlerts.push(`Packet loss high: ${m.packetLoss}% at t${i + 1}`);\r\n          if (m.throughput < 200) newAlerts.push(`Throughput low: ${m.throughput} kbps at t${i + 1}`);\r\n        });\r\n        setAlerts(newAlerts);\r\n      } catch (err) {\r\n        console.error('Error fetching metrics:', err);\r\n      }\r\n    };\r\n\r\n    fetchMetrics();\r\n    const interval = setInterval(fetchMetrics, 5000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const labels = metrics.map((_, i) => `t${i + 1}`);\r\n  const createChart = (label, data, color) => ({\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label,\r\n        data,\r\n        borderColor: color,\r\n        backgroundColor: `${color}33`,\r\n        fill: true,\r\n        tension: 0.3,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>ðŸ“Š Metrics Collector (Live)</h1>\r\n\r\n      {/* --- Alerts Section --- */}\r\n      {alerts.length > 0 && (\r\n        <div className=\"alerts-container\">\r\n          {alerts.map((a, i) => (\r\n            <div key={i} className=\"alert-box\">{a}</div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {metrics.length > 0 ? (\r\n        <>\r\n          <div className=\"charts-row\">\r\n            <div className=\"chart-card\">\r\n              <h3>Throughput (kbps)</h3>\r\n              <Line data={createChart('Throughput', metrics.map(m => m.throughput), '#28a745')} />\r\n            </div>\r\n            <div className=\"chart-card\">\r\n              <h3>Delay (ms)</h3>\r\n              <Line data={createChart('Delay', metrics.map(m => m.delay), '#007bff')} />\r\n            </div>\r\n          </div>\r\n          <div className=\"charts-row\">\r\n            <div className=\"chart-card\">\r\n              <h3>Packet Loss (%)</h3>\r\n              <Line data={createChart('Packet Loss', metrics.map(m => m.packetLoss), '#dc3545')} />\r\n            </div>\r\n            <div className=\"chart-card\">\r\n              <h3>Retransmissions</h3>\r\n              <Line data={createChart('Retransmissions', metrics.map(m => m.retransmissions), '#fd7e14')} />\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <p>Loading metrics...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MetricsCollector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}