{"ast":null,"code":"var _jsxFileName = \"D:\\\\protocol-analyzer\\\\client\\\\src\\\\pages\\\\VisualizationDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { io } from 'socket.io-client';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction VisualizationDashboard() {\n  _s();\n  const [scenarios, setScenarios] = useState([]);\n  useEffect(() => {\n    socket.on('protocolMetrics', newMetrics => {\n      // Treat each metric as a scenario\n      const timestamped = newMetrics.map((m, i) => ({\n        name: `t${Date.now() % 100000}-${i}`,\n        ...m\n      }));\n      setScenarios(prev => {\n        const updated = [...prev, ...timestamped];\n        return updated.slice(-5); // keep last 20 scenarios\n      });\n    });\n    return () => socket.disconnect();\n  }, []);\n  const labels = scenarios.map(s => s.name);\n  const chartData = (metric, color) => ({\n    labels,\n    datasets: [{\n      label: metric,\n      data: scenarios.map(s => s[metric]),\n      backgroundColor: color\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDCC8 Visualization Dashboard (Live)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), scenarios.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: chartData('throughput', '#28a745')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: chartData('delay', '#007bff')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: chartData('packetLoss', '#dc3545')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: chartData('retransmissions', '#fd7e14')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: chartData('congestion', '#6f42c1')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Waiting for live scenario data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(VisualizationDashboard, \"v54NLGvVfwEwZ530YHcP87cIeuk=\");\n_c = VisualizationDashboard;\nexport default VisualizationDashboard;\nvar _c;\n$RefreshReg$(_c, \"VisualizationDashboard\");","map":{"version":3,"names":["React","useEffect","useState","Bar","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","VisualizationDashboard","_s","scenarios","setScenarios","on","newMetrics","timestamped","map","m","i","name","Date","now","prev","updated","slice","disconnect","labels","s","chartData","metric","color","datasets","label","data","backgroundColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["D:/protocol-analyzer/client/src/pages/VisualizationDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { io } from 'socket.io-client';\r\nimport 'chart.js/auto';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nfunction VisualizationDashboard() {\r\n  const [scenarios, setScenarios] = useState([]);\r\n\r\n  useEffect(() => {\r\n    socket.on('protocolMetrics', newMetrics => {\r\n      // Treat each metric as a scenario\r\n      const timestamped = newMetrics.map((m, i) => ({\r\n        name: `t${Date.now() % 100000}-${i}`,\r\n        ...m,\r\n      }));\r\n\r\n      setScenarios(prev => {\r\n        const updated = [...prev, ...timestamped];\r\n        return updated.slice(-5); // keep last 20 scenarios\r\n      });\r\n    });\r\n\r\n    return () => socket.disconnect();\r\n  }, []);\r\n\r\n  const labels = scenarios.map(s => s.name);\r\n\r\n  const chartData = (metric, color) => ({\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: metric,\r\n        data: scenarios.map(s => s[metric]),\r\n        backgroundColor: color,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>ðŸ“ˆ Visualization Dashboard (Live)</h1>\r\n\r\n      {scenarios.length > 0 ? (\r\n        <>\r\n          <div className=\"chart\">\r\n            <Bar data={chartData('throughput', '#28a745')} />\r\n          </div>\r\n          <div className=\"chart\">\r\n            <Bar data={chartData('delay', '#007bff')} />\r\n          </div>\r\n          <div className=\"chart\">\r\n            <Bar data={chartData('packetLoss', '#dc3545')} />\r\n          </div>\r\n          <div className=\"chart\">\r\n            <Bar data={chartData('retransmissions', '#fd7e14')} />\r\n          </div>\r\n          <div className=\"chart\">\r\n            <Bar data={chartData('congestion', '#6f42c1')} />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <p>Waiting for live scenario data...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VisualizationDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}