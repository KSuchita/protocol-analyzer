{"ast":null,"code":"var _jsxFileName = \"D:\\\\protocol-analyzer\\\\client\\\\src\\\\pages\\\\MetricsCollector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MetricsCollector() {\n  _s();\n  const [metrics, setMetrics] = useState([]);\n  const [status, setStatus] = useState('');\n  const [summary, setSummary] = useState(null);\n  const [stopped, setStopped] = useState(false);\n  const protocol = \"HTTP\"; // You can change this dynamically later\n\n  useEffect(() => {\n    if (stopped) return;\n    const fetchMetrics = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/metrics/collect');\n        setMetrics(prev => {\n          const updated = [...prev, ...res.data];\n          if (updated.length >= 10) {\n            analyzeProtocol(updated.slice(-10));\n            setStopped(true);\n          }\n          return updated.slice(-10);\n        });\n      } catch (err) {\n        console.error('Error fetching metrics:', err);\n      }\n    };\n    fetchMetrics();\n    const interval = setInterval(fetchMetrics, 5000);\n    return () => clearInterval(interval);\n  }, [stopped]);\n  const analyzeProtocol = data => {\n    const avgDelay = (data.reduce((a, b) => a + b.delay, 0) / data.length).toFixed(2);\n    const avgLoss = (data.reduce((a, b) => a + b.packetLoss, 0) / data.length).toFixed(2);\n    const avgThroughput = (data.reduce((a, b) => a + b.throughput, 0) / data.length).toFixed(2);\n    let conclusion = '';\n    if (avgDelay < 150 && avgLoss < 2 && avgThroughput > 800) {\n      conclusion = `✅ ${protocol} Protocol is working fine and stable.`;\n    } else {\n      conclusion = `⚠️ ${protocol} Protocol is not working properly or unstable.`;\n    }\n    setStatus(conclusion);\n    setSummary({\n      avgDelay,\n      avgLoss,\n      avgThroughput,\n      conclusion\n    });\n\n    // Auto-generate PDF after analysis\n    setTimeout(downloadPDF, 2000);\n  };\n  const labels = metrics.map((_, i) => `t${i + 1}`);\n  const createChart = (label, data, color) => ({\n    labels,\n    datasets: [{\n      label,\n      data,\n      borderColor: color,\n      backgroundColor: `${color}33`,\n      fill: true,\n      tension: 0.3\n    }]\n  });\n\n  // --- Improved PDF generation with darker text and sharp image ---\n  const downloadPDF = () => {\n    const input = document.getElementById('metrics-report');\n    html2canvas(input, {\n      scale: 2,\n      backgroundColor: '#ffffff'\n    }).then(canvas => {\n      const imgData = canvas.toDataURL('image/jpeg', 1.0); // use high quality JPEG\n      const pdf = new jsPDF('p', 'mm', 'a4');\n      const pdfWidth = pdf.internal.pageSize.getWidth();\n      const imgProps = pdf.getImageProperties(imgData);\n      const pdfHeight = imgProps.height * pdfWidth / imgProps.width;\n\n      // Dark title text\n      pdf.setTextColor(0, 0, 0);\n      pdf.setFont('helvetica', 'bold');\n      pdf.setFontSize(18);\n      pdf.text(`${protocol} Metrics Analysis Report`, 14, 20);\n      pdf.setFont('helvetica', 'normal');\n      pdf.setFontSize(12);\n      pdf.text(`Generated on: ${new Date().toLocaleString()}`, 14, 30);\n      pdf.text(`Protocol: ${protocol}`, 14, 38);\n      if (summary) {\n        pdf.text(`Average Delay: ${summary.avgDelay} ms`, 14, 48);\n        pdf.text(`Average Packet Loss: ${summary.avgLoss} %`, 14, 56);\n        pdf.text(`Average Throughput: ${summary.avgThroughput} kbps`, 14, 64);\n\n        // Bold conclusion for emphasis\n        pdf.setFont('helvetica', 'bold');\n        pdf.text(`Conclusion: ${summary.conclusion}`, 14, 74);\n      }\n\n      // Add chart image\n      pdf.addImage(imgData, 'JPEG', 10, 85, pdfWidth - 20, pdfHeight / 2);\n      pdf.save(`HTTP_metrics_report_${Date.now()}.pdf`);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\uD83D\\uDCCA \", protocol, \" Metrics Collector (Live)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), metrics.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"metrics-report\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"charts-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Throughput (kbps)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              data: createChart('Throughput (kbps)', metrics.map(m => m.throughput), '#28a745')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Delay (ms)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              data: createChart('Delay (ms)', metrics.map(m => m.delay), '#007bff')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"charts-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Packet Loss (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              data: createChart('Packet Loss (%)', metrics.map(m => m.packetLoss), '#dc3545')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Retransmissions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              data: createChart('Retransmissions', metrics.map(m => m.retransmissions), '#fd7e14')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"charts-row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Congestion Level (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              data: createChart('Congestion Level (%)', metrics.map(m => m.congestion), '#6f42c1')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), summary && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD83D\\uDCD8 Summary Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Protocol:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 20\n            }, this), \" \", protocol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Average Delay:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 20\n            }, this), \" \", summary.avgDelay, \" ms\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Average Packet Loss:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 20\n            }, this), \" \", summary.avgLoss, \" %\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Average Throughput:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 20\n            }, this), \" \", summary.avgThroughput, \" kbps\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Conclusion:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 20\n            }, this), \" \", summary.conclusion]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), status && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-box\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading metrics...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(MetricsCollector, \"nothaM7KBejGUjCcu6KrpfOyzjU=\");\n_c = MetricsCollector;\nexport default MetricsCollector;\nvar _c;\n$RefreshReg$(_c, \"MetricsCollector\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Line","jsPDF","html2canvas","jsxDEV","_jsxDEV","Fragment","_Fragment","MetricsCollector","_s","metrics","setMetrics","status","setStatus","summary","setSummary","stopped","setStopped","protocol","fetchMetrics","res","get","prev","updated","data","length","analyzeProtocol","slice","err","console","error","interval","setInterval","clearInterval","avgDelay","reduce","a","b","delay","toFixed","avgLoss","packetLoss","avgThroughput","throughput","conclusion","setTimeout","downloadPDF","labels","map","_","i","createChart","label","color","datasets","borderColor","backgroundColor","fill","tension","input","document","getElementById","scale","then","canvas","imgData","toDataURL","pdf","pdfWidth","internal","pageSize","getWidth","imgProps","getImageProperties","pdfHeight","height","width","setTextColor","setFont","setFontSize","text","Date","toLocaleString","addImage","save","now","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","m","retransmissions","congestion","_c","$RefreshReg$"],"sources":["D:/protocol-analyzer/client/src/pages/MetricsCollector.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { Line } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\nimport jsPDF from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\n\r\nfunction MetricsCollector() {\r\n  const [metrics, setMetrics] = useState([]);\r\n  const [status, setStatus] = useState('');\r\n  const [summary, setSummary] = useState(null);\r\n  const [stopped, setStopped] = useState(false);\r\n  const protocol = \"HTTP\"; // You can change this dynamically later\r\n\r\n  useEffect(() => {\r\n    if (stopped) return;\r\n\r\n    const fetchMetrics = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/metrics/collect');\r\n        setMetrics(prev => {\r\n          const updated = [...prev, ...res.data];\r\n          if (updated.length >= 10) {\r\n            analyzeProtocol(updated.slice(-10));\r\n            setStopped(true);\r\n          }\r\n          return updated.slice(-10);\r\n        });\r\n      } catch (err) {\r\n        console.error('Error fetching metrics:', err);\r\n      }\r\n    };\r\n\r\n    fetchMetrics();\r\n    const interval = setInterval(fetchMetrics, 5000);\r\n    return () => clearInterval(interval);\r\n  }, [stopped]);\r\n\r\n  const analyzeProtocol = (data) => {\r\n    const avgDelay = (data.reduce((a, b) => a + b.delay, 0) / data.length).toFixed(2);\r\n    const avgLoss = (data.reduce((a, b) => a + b.packetLoss, 0) / data.length).toFixed(2);\r\n    const avgThroughput = (data.reduce((a, b) => a + b.throughput, 0) / data.length).toFixed(2);\r\n\r\n    let conclusion = '';\r\n    if (avgDelay < 150 && avgLoss < 2 && avgThroughput > 800) {\r\n      conclusion = `✅ ${protocol} Protocol is working fine and stable.`;\r\n    } else {\r\n      conclusion = `⚠️ ${protocol} Protocol is not working properly or unstable.`;\r\n    }\r\n\r\n    setStatus(conclusion);\r\n    setSummary({ avgDelay, avgLoss, avgThroughput, conclusion });\r\n\r\n    // Auto-generate PDF after analysis\r\n    setTimeout(downloadPDF, 2000);\r\n  };\r\n\r\n  const labels = metrics.map((_, i) => `t${i + 1}`);\r\n\r\n  const createChart = (label, data, color) => ({\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label,\r\n        data,\r\n        borderColor: color,\r\n        backgroundColor: `${color}33`,\r\n        fill: true,\r\n        tension: 0.3,\r\n      },\r\n    ],\r\n  });\r\n\r\n  // --- Improved PDF generation with darker text and sharp image ---\r\n  const downloadPDF = () => {\r\n    const input = document.getElementById('metrics-report');\r\n\r\n    html2canvas(input, { scale: 2, backgroundColor: '#ffffff' }).then(canvas => {\r\n      const imgData = canvas.toDataURL('image/jpeg', 1.0); // use high quality JPEG\r\n      const pdf = new jsPDF('p', 'mm', 'a4');\r\n      const pdfWidth = pdf.internal.pageSize.getWidth();\r\n      const imgProps = pdf.getImageProperties(imgData);\r\n      const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\r\n\r\n      // Dark title text\r\n      pdf.setTextColor(0, 0, 0);\r\n      pdf.setFont('helvetica', 'bold');\r\n      pdf.setFontSize(18);\r\n      pdf.text(`${protocol} Metrics Analysis Report`, 14, 20);\r\n\r\n      pdf.setFont('helvetica', 'normal');\r\n      pdf.setFontSize(12);\r\n      pdf.text(`Generated on: ${new Date().toLocaleString()}`, 14, 30);\r\n      pdf.text(`Protocol: ${protocol}`, 14, 38);\r\n\r\n      if (summary) {\r\n        pdf.text(`Average Delay: ${summary.avgDelay} ms`, 14, 48);\r\n        pdf.text(`Average Packet Loss: ${summary.avgLoss} %`, 14, 56);\r\n        pdf.text(`Average Throughput: ${summary.avgThroughput} kbps`, 14, 64);\r\n\r\n        // Bold conclusion for emphasis\r\n        pdf.setFont('helvetica', 'bold');\r\n        pdf.text(`Conclusion: ${summary.conclusion}`, 14, 74);\r\n      }\r\n\r\n      // Add chart image\r\n      pdf.addImage(imgData, 'JPEG', 10, 85, pdfWidth - 20, pdfHeight / 2);\r\n      pdf.save(`HTTP_metrics_report_${Date.now()}.pdf`);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>📊 {protocol} Metrics Collector (Live)</h1>\r\n\r\n      {metrics.length > 0 ? (\r\n        <>\r\n          <div id=\"metrics-report\">\r\n            <div className=\"charts-row\">\r\n              <div className=\"chart-card\">\r\n                <h3>Throughput (kbps)</h3>\r\n                <Line data={createChart('Throughput (kbps)', metrics.map(m => m.throughput), '#28a745')} />\r\n              </div>\r\n              <div className=\"chart-card\">\r\n                <h3>Delay (ms)</h3>\r\n                <Line data={createChart('Delay (ms)', metrics.map(m => m.delay), '#007bff')} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"charts-row\">\r\n              <div className=\"chart-card\">\r\n                <h3>Packet Loss (%)</h3>\r\n                <Line data={createChart('Packet Loss (%)', metrics.map(m => m.packetLoss), '#dc3545')} />\r\n              </div>\r\n              <div className=\"chart-card\">\r\n                <h3>Retransmissions</h3>\r\n                <Line data={createChart('Retransmissions', metrics.map(m => m.retransmissions), '#fd7e14')} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"charts-row\">\r\n              <div className=\"chart-card\">\r\n                <h3>Congestion Level (%)</h3>\r\n                <Line data={createChart('Congestion Level (%)', metrics.map(m => m.congestion), '#6f42c1')} />\r\n              </div>\r\n            </div>\r\n\r\n            {summary && (\r\n              <div className=\"summary-box\">\r\n                <h2>📘 Summary Report</h2>\r\n                <p><strong>Protocol:</strong> {protocol}</p>\r\n                <p><strong>Average Delay:</strong> {summary.avgDelay} ms</p>\r\n                <p><strong>Average Packet Loss:</strong> {summary.avgLoss} %</p>\r\n                <p><strong>Average Throughput:</strong> {summary.avgThroughput} kbps</p>\r\n                <p><strong>Conclusion:</strong> {summary.conclusion}</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {status && (\r\n            <div className=\"status-box\">\r\n              <h3>{status}</h3>\r\n            </div>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <p>Loading metrics...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MetricsCollector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}