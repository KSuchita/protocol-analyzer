{"ast":null,"code":"var _jsxFileName = \"D:\\\\protocol-analyzer\\\\client\\\\src\\\\pages\\\\VisualizationDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { io } from 'socket.io-client';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction VisualizationDashboard() {\n  _s();\n  const [metrics, setMetrics] = useState([]);\n  useEffect(() => {\n    socket.on('protocolMetrics', newMetric => {\n      setMetrics(prev => {\n        const updated = [...prev, newMetric];\n        return updated.slice(-20); // keep last 20 points\n      });\n    });\n    return () => socket.disconnect();\n  }, []);\n  const labels = metrics.map((_, i) => `t${i + 1}`);\n  const chartData = (key, color) => ({\n    labels,\n    datasets: [{\n      label: key,\n      data: metrics.map(m => m[key]),\n      backgroundColor: color\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDCE1 Current Network Metrics (Live)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), metrics.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData('throughput', '#28a745')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData('delay', '#007bff')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData('packetLoss', '#dc3545')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData('retransmissions', '#fd7e14')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData('congestion', '#6f42c1')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Waiting for live metrics...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(VisualizationDashboard, \"3FqZ41HS/PZEpujpm699BM0f8kU=\");\n_c = VisualizationDashboard;\nexport default VisualizationDashboard;\nvar _c;\n$RefreshReg$(_c, \"VisualizationDashboard\");","map":{"version":3,"names":["React","useEffect","useState","Bar","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","VisualizationDashboard","_s","metrics","setMetrics","on","newMetric","prev","updated","slice","disconnect","labels","map","_","i","chartData","key","color","datasets","label","data","m","backgroundColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["D:/protocol-analyzer/client/src/pages/VisualizationDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { io } from 'socket.io-client';\r\nimport 'chart.js/auto';\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nfunction VisualizationDashboard() {\r\n  const [metrics, setMetrics] = useState([]);\r\n\r\n  useEffect(() => {\r\n    socket.on('protocolMetrics', newMetric => {\r\n      setMetrics(prev => {\r\n        const updated = [...prev, newMetric];\r\n        return updated.slice(-20); // keep last 20 points\r\n      });\r\n    });\r\n\r\n    return () => socket.disconnect();\r\n  }, []);\r\n\r\n  const labels = metrics.map((_, i) => `t${i + 1}`);\r\n\r\n  const chartData = (key, color) => ({\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: key,\r\n        data: metrics.map(m => m[key]),\r\n        backgroundColor: color,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>ðŸ“¡ Current Network Metrics (Live)</h1>\r\n\r\n      {metrics.length > 0 ? (\r\n        <>\r\n          <Bar data={chartData('throughput', '#28a745')} />\r\n          <Bar data={chartData('delay', '#007bff')} />\r\n          <Bar data={chartData('packetLoss', '#dc3545')} />\r\n          <Bar data={chartData('retransmissions', '#fd7e14')} />\r\n          <Bar data={chartData('congestion', '#6f42c1')} />\r\n        </>\r\n      ) : (\r\n        <p>Waiting for live metrics...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VisualizationDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}