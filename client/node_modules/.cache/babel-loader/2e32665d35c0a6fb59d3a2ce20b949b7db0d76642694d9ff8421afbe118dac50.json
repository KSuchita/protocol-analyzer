{"ast":null,"code":"var _jsxFileName = \"D:\\\\protocol-analyzer\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [metrics, setMetrics] = useState([]);\n  const [protocol, setProtocol] = useState('TCP');\n  const [latency, setLatency] = useState(50);\n  const [bandwidth, setBandwidth] = useState(1000);\n  const [errorRate, setErrorRate] = useState(1);\n\n  // Fetch metrics from backend\n  const fetchMetrics = () => {\n    axios.get('http://localhost:5000/api/metrics').then(res => setMetrics(res.data)).catch(err => console.error('Axios error:', err));\n  };\n\n  // Run simulation and refresh chart\n  const runSimulation = async e => {\n    e.preventDefault();\n    await axios.post('http://localhost:5000/api/simulate/run', {\n      protocol,\n      latency: Number(latency),\n      bandwidth: Number(bandwidth),\n      errorRate: Number(errorRate)\n    });\n    fetchMetrics();\n  };\n  useEffect(() => {\n    fetchMetrics();\n  }, []);\n\n  // Chart data\n  const chartData = {\n    labels: metrics.map(m => new Date(m.timestamp).toLocaleTimeString()),\n    datasets: [{\n      label: 'Latency (ms)',\n      data: metrics.map(m => m.latency),\n      borderColor: 'blue',\n      fill: false\n    }, {\n      label: 'Throughput (kbps)',\n      data: metrics.map(m => m.throughput),\n      borderColor: 'green',\n      fill: false\n    }, {\n      label: 'Packet Loss (%)',\n      data: metrics.map(m => m.packetLoss),\n      borderColor: 'red',\n      fill: false\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '80%',\n      margin: 'auto',\n      fontFamily: 'Arial'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Protocol Performance Analyzer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: runSimulation,\n      style: {\n        marginBottom: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDD27 Simulate Protocol\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Protocol:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: protocol,\n        onChange: e => setProtocol(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"TCP\",\n          children: \"TCP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"UDP\",\n          children: \"UDP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ICMP\",\n          children: \"ICMP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Latency (ms):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: latency,\n        onChange: e => setLatency(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Bandwidth (kbps):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: bandwidth,\n        onChange: e => setBandwidth(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Error Rate (%):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: errorRate,\n        onChange: e => setErrorRate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          marginTop: '1rem'\n        },\n        children: \"Run Simulation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), metrics.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No metrics available. Run a simulation to generate data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4NOQvDS010ykUXebALtX4ASdWBg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","Line","jsxDEV","_jsxDEV","App","_s","metrics","setMetrics","protocol","setProtocol","latency","setLatency","bandwidth","setBandwidth","errorRate","setErrorRate","fetchMetrics","get","then","res","data","catch","err","console","error","runSimulation","e","preventDefault","post","Number","chartData","labels","map","m","Date","timestamp","toLocaleTimeString","datasets","label","borderColor","fill","throughput","packetLoss","style","width","margin","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","marginBottom","value","onChange","target","type","marginTop","length","_c","$RefreshReg$"],"sources":["D:/protocol-analyzer/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\n\nfunction App() {\n  const [metrics, setMetrics] = useState([]);\n  const [protocol, setProtocol] = useState('TCP');\n  const [latency, setLatency] = useState(50);\n  const [bandwidth, setBandwidth] = useState(1000);\n  const [errorRate, setErrorRate] = useState(1);\n\n  // Fetch metrics from backend\n  const fetchMetrics = () => {\n    axios.get('http://localhost:5000/api/metrics')\n      .then(res => setMetrics(res.data))\n      .catch(err => console.error('Axios error:', err));\n  };\n\n  // Run simulation and refresh chart\n  const runSimulation = async (e) => {\n    e.preventDefault();\n    await axios.post('http://localhost:5000/api/simulate/run', {\n      protocol,\n      latency: Number(latency),\n      bandwidth: Number(bandwidth),\n      errorRate: Number(errorRate),\n    });\n    fetchMetrics();\n  };\n\n  useEffect(() => {\n    fetchMetrics();\n  }, []);\n\n  // Chart data\n  const chartData = {\n    labels: metrics.map(m => new Date(m.timestamp).toLocaleTimeString()),\n    datasets: [\n      {\n        label: 'Latency (ms)',\n        data: metrics.map(m => m.latency),\n        borderColor: 'blue',\n        fill: false,\n      },\n      {\n        label: 'Throughput (kbps)',\n        data: metrics.map(m => m.throughput),\n        borderColor: 'green',\n        fill: false,\n      },\n      {\n        label: 'Packet Loss (%)',\n        data: metrics.map(m => m.packetLoss),\n        borderColor: 'red',\n        fill: false,\n      },\n    ],\n  };\n\n  return (\n    <div style={{ width: '80%', margin: 'auto', fontFamily: 'Arial' }}>\n      <h1>Protocol Performance Analyzer</h1>\n\n      <form onSubmit={runSimulation} style={{ marginBottom: '2rem' }}>\n        <h3>ðŸ”§ Simulate Protocol</h3>\n\n        <label>Protocol:</label>\n        <select value={protocol} onChange={e => setProtocol(e.target.value)}>\n          <option value=\"TCP\">TCP</option>\n          <option value=\"UDP\">UDP</option>\n          <option value=\"ICMP\">ICMP</option>\n        </select>\n\n        <br /><label>Latency (ms):</label>\n        <input type=\"number\" value={latency} onChange={e => setLatency(e.target.value)} />\n\n        <br /><label>Bandwidth (kbps):</label>\n        <input type=\"number\" value={bandwidth} onChange={e => setBandwidth(e.target.value)} />\n\n        <br /><label>Error Rate (%):</label>\n        <input type=\"number\" value={errorRate} onChange={e => setErrorRate(e.target.value)} />\n\n        <br /><button type=\"submit\" style={{ marginTop: '1rem' }}>Run Simulation</button>\n      </form>\n\n      {metrics.length === 0 ? (\n        <p>No metrics available. Run a simulation to generate data.</p>\n      ) : (\n        <Line data={chartData} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}