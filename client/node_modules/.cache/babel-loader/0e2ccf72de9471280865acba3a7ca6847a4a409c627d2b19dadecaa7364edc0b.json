{"ast":null,"code":"var _jsxFileName = \"D:\\\\protocol-analyzer\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// client/src/App.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [metrics, setMetrics] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/metrics').then(res => {\n      console.log('Received metrics:', res.data); // ✅ Add this\n      setMetrics(res.data);\n    }).catch(err => console.error('Axios error:', err));\n  }, []);\n  const chartData = {\n    labels: metrics.map(m => new Date(m.timestamp).toLocaleTimeString()),\n    datasets: [{\n      label: 'Latency (ms)',\n      data: metrics.map(m => m.latency),\n      borderColor: 'blue',\n      fill: false\n    }, {\n      label: 'Throughput (kbps)',\n      data: metrics.map(m => m.throughput),\n      borderColor: 'green',\n      fill: false\n    }, {\n      label: 'Packet Loss (%)',\n      data: metrics.map(m => m.packetLoss),\n      borderColor: 'red',\n      fill: false\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '80%',\n      margin: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Protocol Performance Analyzer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3FqZ41HS/PZEpujpm699BM0f8kU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","Line","jsxDEV","_jsxDEV","App","_s","metrics","setMetrics","get","then","res","console","log","data","catch","err","error","chartData","labels","map","m","Date","timestamp","toLocaleTimeString","datasets","label","latency","borderColor","fill","throughput","packetLoss","style","width","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/protocol-analyzer/client/src/App.js"],"sourcesContent":["// client/src/App.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\n\nfunction App() {\n  const [metrics, setMetrics] = useState([]);\n\n  useEffect(() => {\n  axios.get('http://localhost:5000/api/metrics')\n    .then(res => {\n      console.log('Received metrics:', res.data); // ✅ Add this\n      setMetrics(res.data);\n    })\n    .catch(err => console.error('Axios error:', err));\n}, []);\n\n\n  const chartData = {\n    labels: metrics.map(m => new Date(m.timestamp).toLocaleTimeString()),\n    datasets: [\n      {\n        label: 'Latency (ms)',\n        data: metrics.map(m => m.latency),\n        borderColor: 'blue',\n        fill: false,\n      },\n      {\n        label: 'Throughput (kbps)',\n        data: metrics.map(m => m.throughput),\n        borderColor: 'green',\n        fill: false,\n      },\n      {\n        label: 'Packet Loss (%)',\n        data: metrics.map(m => m.packetLoss),\n        borderColor: 'red',\n        fill: false,\n      },\n    ],\n  };\n\n  return (\n    <div style={{ width: '80%', margin: 'auto' }}>\n      <h1>Protocol Performance Analyzer</h1>\n      <Line data={chartData} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IAChBE,KAAK,CAACQ,GAAG,CAAC,mCAAmC,CAAC,CAC3CC,IAAI,CAACC,GAAG,IAAI;MACXC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,GAAG,CAACG,IAAI,CAAC,CAAC,CAAC;MAC5CN,UAAU,CAACG,GAAG,CAACG,IAAI,CAAC;IACtB,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIJ,OAAO,CAACK,KAAK,CAAC,cAAc,EAAED,GAAG,CAAC,CAAC;EACrD,CAAC,EAAE,EAAE,CAAC;EAGJ,MAAME,SAAS,GAAG;IAChBC,MAAM,EAAEZ,OAAO,CAACa,GAAG,CAACC,CAAC,IAAI,IAAIC,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;IACpEC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,cAAc;MACrBZ,IAAI,EAAEP,OAAO,CAACa,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACM,OAAO,CAAC;MACjCC,WAAW,EAAE,MAAM;MACnBC,IAAI,EAAE;IACR,CAAC,EACD;MACEH,KAAK,EAAE,mBAAmB;MAC1BZ,IAAI,EAAEP,OAAO,CAACa,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACS,UAAU,CAAC;MACpCF,WAAW,EAAE,OAAO;MACpBC,IAAI,EAAE;IACR,CAAC,EACD;MACEH,KAAK,EAAE,iBAAiB;MACxBZ,IAAI,EAAEP,OAAO,CAACa,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACU,UAAU,CAAC;MACpCH,WAAW,EAAE,KAAK;MAClBC,IAAI,EAAE;IACR,CAAC;EAEL,CAAC;EAED,oBACEzB,OAAA;IAAK4B,KAAK,EAAE;MAAEC,KAAK,EAAE,KAAK;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC3C/B,OAAA;MAAA+B,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCnC,OAAA,CAACF,IAAI;MAACY,IAAI,EAAEI;IAAU;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV;AAACjC,EAAA,CA3CQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}