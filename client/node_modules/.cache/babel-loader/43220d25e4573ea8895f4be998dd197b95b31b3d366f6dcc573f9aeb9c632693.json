{"ast":null,"code":"var _jsxFileName = \"D:\\\\protocol-analyzer\\\\client\\\\src\\\\pages\\\\MetricsCollector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MetricsCollector() {\n  _s();\n  const [metrics, setMetrics] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/metrics/collect').then(res => setMetrics(res.data)).catch(err => console.error('Error fetching metrics:', err));\n  }, []);\n  const chartData = {\n    labels: metrics.map((m, i) => `t${i + 1}`),\n    datasets: [{\n      label: 'Throughput (kbps)',\n      data: metrics.map(m => m.throughput),\n      borderColor: 'green',\n      fill: false\n    }, {\n      label: 'Delay (ms)',\n      data: metrics.map(m => m.delay),\n      borderColor: 'blue',\n      fill: false\n    }, {\n      label: 'Packet Loss (%)',\n      data: metrics.map(m => m.packetLoss),\n      borderColor: 'red',\n      fill: false\n    }, {\n      label: 'Retransmissions',\n      data: metrics.map(m => m.retransmissions),\n      borderColor: 'orange',\n      fill: false\n    }, {\n      label: 'Congestion Level',\n      data: metrics.map(m => m.congestion),\n      borderColor: 'purple',\n      fill: false\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDCCA Metrics Collector\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), metrics.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading metrics...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(MetricsCollector, \"3FqZ41HS/PZEpujpm699BM0f8kU=\");\n_c = MetricsCollector;\nexport default MetricsCollector;\nvar _c;\n$RefreshReg$(_c, \"MetricsCollector\");","map":{"version":3,"names":["React","useState","useEffect","axios","Line","jsxDEV","_jsxDEV","MetricsCollector","_s","metrics","setMetrics","get","then","res","data","catch","err","console","error","chartData","labels","map","m","i","datasets","label","throughput","borderColor","fill","delay","packetLoss","retransmissions","congestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["D:/protocol-analyzer/client/src/pages/MetricsCollector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Line } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\n\r\nfunction MetricsCollector() {\r\n  const [metrics, setMetrics] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/metrics/collect')\r\n      .then(res => setMetrics(res.data))\r\n      .catch(err => console.error('Error fetching metrics:', err));\r\n  }, []);\r\n\r\n  const chartData = {\r\n    labels: metrics.map((m, i) => `t${i + 1}`),\r\n    datasets: [\r\n      {\r\n        label: 'Throughput (kbps)',\r\n        data: metrics.map(m => m.throughput),\r\n        borderColor: 'green',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Delay (ms)',\r\n        data: metrics.map(m => m.delay),\r\n        borderColor: 'blue',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Packet Loss (%)',\r\n        data: metrics.map(m => m.packetLoss),\r\n        borderColor: 'red',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Retransmissions',\r\n        data: metrics.map(m => m.retransmissions),\r\n        borderColor: 'orange',\r\n        fill: false,\r\n      },\r\n      {\r\n        label: 'Congestion Level',\r\n        data: metrics.map(m => m.congestion),\r\n        borderColor: 'purple',\r\n        fill: false,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>ðŸ“Š Metrics Collector</h1>\r\n      {metrics.length > 0 ? (\r\n        <div className=\"chart\">\r\n          <Line data={chartData} />\r\n        </div>\r\n      ) : (\r\n        <p>Loading metrics...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MetricsCollector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}