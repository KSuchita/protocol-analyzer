{"ast":null,"code":"var _jsxFileName = \"D:\\\\protocol-analyzer\\\\client\\\\src\\\\pages\\\\PerformanceEngine.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport SimulateForm from '../components/SimulateForm';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PerformanceEngine() {\n  _s();\n  const [metrics, setMetrics] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [showForm, setShowForm] = useState(true);\n  const fetchMetrics = async () => {\n    setLoading(true);\n    try {\n      // Simulate random results for demo instead of backend\n      const randomData = Array.from({\n        length: 10\n      }, (_, i) => ({\n        latency: Math.floor(Math.random() * 150),\n        throughput: Math.floor(Math.random() * 2000),\n        packetLoss: Math.random() * 10\n      }));\n      setMetrics(randomData);\n      setShowForm(false);\n    } catch (err) {\n      console.error('Error fetching metrics:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const chartData = (label, color, key) => ({\n    labels: metrics.map((_, i) => `T${i + 1}`),\n    datasets: [{\n      label,\n      data: metrics.map(m => m[key]),\n      borderColor: color,\n      fill: false,\n      tension: 0.3\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDCC8 Performance Engine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), showForm ? /*#__PURE__*/_jsxDEV(SimulateForm, {\n      onSimulate: fetchMetrics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Simulation completed \\u2014 displaying results.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading chart...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Latency (ms)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            data: chartData('Latency', '#0078d4', 'latency')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Throughput (kbps)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            data: chartData('Throughput', '#28a745', 'throughput')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Packet Loss (%)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            data: chartData('Packet Loss', '#dc3545', 'packetLoss')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(PerformanceEngine, \"ZrkDMN2mY2NNXeh90LBgIeToB9g=\");\n_c = PerformanceEngine;\nexport default PerformanceEngine;\nvar _c;\n$RefreshReg$(_c, \"PerformanceEngine\");","map":{"version":3,"names":["React","useState","useEffect","axios","Line","SimulateForm","jsxDEV","_jsxDEV","Fragment","_Fragment","PerformanceEngine","_s","metrics","setMetrics","loading","setLoading","showForm","setShowForm","fetchMetrics","randomData","Array","from","length","_","i","latency","Math","floor","random","throughput","packetLoss","err","console","error","chartData","label","color","key","labels","map","datasets","data","m","borderColor","fill","tension","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSimulate","_c","$RefreshReg$"],"sources":["D:/protocol-analyzer/client/src/pages/PerformanceEngine.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Line } from 'react-chartjs-2';\r\nimport SimulateForm from '../components/SimulateForm';\r\nimport 'chart.js/auto';\r\n\r\nfunction PerformanceEngine() {\r\n  const [metrics, setMetrics] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [showForm, setShowForm] = useState(true);\r\n\r\n  const fetchMetrics = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // Simulate random results for demo instead of backend\r\n      const randomData = Array.from({ length: 10 }, (_, i) => ({\r\n        latency: Math.floor(Math.random() * 150),\r\n        throughput: Math.floor(Math.random() * 2000),\r\n        packetLoss: Math.random() * 10,\r\n      }));\r\n      setMetrics(randomData);\r\n      setShowForm(false);\r\n    } catch (err) {\r\n      console.error('Error fetching metrics:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const chartData = (label, color, key) => ({\r\n    labels: metrics.map((_, i) => `T${i + 1}`),\r\n    datasets: [\r\n      {\r\n        label,\r\n        data: metrics.map(m => m[key]),\r\n        borderColor: color,\r\n        fill: false,\r\n        tension: 0.3,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>ðŸ“ˆ Performance Engine</h1>\r\n\r\n      {showForm ? (\r\n        <SimulateForm onSimulate={fetchMetrics} />\r\n      ) : (\r\n        <>\r\n          <p>Simulation completed â€” displaying results.</p>\r\n\r\n          {loading && <p>Loading chart...</p>}\r\n\r\n          <div className=\"dashboard-grid\">\r\n            <div className=\"chart-card\">\r\n              <h3>Latency (ms)</h3>\r\n              <Line data={chartData('Latency', '#0078d4', 'latency')} />\r\n            </div>\r\n\r\n            <div className=\"chart-card\">\r\n              <h3>Throughput (kbps)</h3>\r\n              <Line data={chartData('Throughput', '#28a745', 'throughput')} />\r\n            </div>\r\n\r\n            <div className=\"chart-card\">\r\n              <h3>Packet Loss (%)</h3>\r\n              <Line data={chartData('Packet Loss', '#dc3545', 'packetLoss')} />\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PerformanceEngine;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}