{"ast":null,"code":"var _jsxFileName = \"D:\\\\protocol-analyzer\\\\client\\\\src\\\\pages\\\\PerformanceEngine.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport SimulateForm from '../components/SimulateForm';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PerformanceEngine() {\n  _s();\n  const [metrics, setMetrics] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Function to generate random metrics\n  const generateRandomMetrics = (count = 10) => {\n    const data = [];\n    for (let i = 0; i < count; i++) {\n      data.push({\n        latency: Math.floor(Math.random() * 200),\n        // 0-200 ms\n        throughput: Math.floor(Math.random() * 1000),\n        // 0-1000 kbps\n        packetLoss: parseFloat((Math.random() * 5).toFixed(2)) // 0-5 %\n      });\n    }\n    return data;\n  };\n  const fetchMetrics = async () => {\n    setLoading(true);\n    try {\n      // Instead of Axios, generate random values\n      const randomData = generateRandomMetrics(15); // generate 15 data points\n      setMetrics(randomData);\n    } catch (err) {\n      console.error('Error generating metrics:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchMetrics();\n  }, []);\n  const chartData = {\n    labels: metrics.map((m, i) => `t${i + 1}`),\n    datasets: [{\n      label: 'Latency (ms)',\n      data: metrics.map(m => m.latency),\n      borderColor: '#0078d4',\n      fill: false,\n      tension: 0.3\n    }, {\n      label: 'Throughput (kbps)',\n      data: metrics.map(m => m.throughput),\n      borderColor: '#28a745',\n      fill: false,\n      tension: 0.3\n    }, {\n      label: 'Packet Loss (%)',\n      data: metrics.map(m => m.packetLoss),\n      borderColor: '#dc3545',\n      fill: false,\n      tension: 0.3\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDCCA Performance Engine (Random Data)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SimulateForm, {\n      onSimulate: fetchMetrics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading chart...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }, this), metrics.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(PerformanceEngine, \"8NWhX6me14IybV2oeClZzt+BeAc=\");\n_c = PerformanceEngine;\nexport default PerformanceEngine;\nvar _c;\n$RefreshReg$(_c, \"PerformanceEngine\");","map":{"version":3,"names":["React","useState","useEffect","Line","SimulateForm","jsxDEV","_jsxDEV","PerformanceEngine","_s","metrics","setMetrics","loading","setLoading","generateRandomMetrics","count","data","i","push","latency","Math","floor","random","throughput","packetLoss","parseFloat","toFixed","fetchMetrics","randomData","err","console","error","chartData","labels","map","m","datasets","label","borderColor","fill","tension","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSimulate","length","_c","$RefreshReg$"],"sources":["D:/protocol-analyzer/client/src/pages/PerformanceEngine.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport SimulateForm from '../components/SimulateForm';\r\nimport 'chart.js/auto';\r\n\r\nfunction PerformanceEngine() {\r\n  const [metrics, setMetrics] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Function to generate random metrics\r\n  const generateRandomMetrics = (count = 10) => {\r\n    const data = [];\r\n    for (let i = 0; i < count; i++) {\r\n      data.push({\r\n        latency: Math.floor(Math.random() * 200), // 0-200 ms\r\n        throughput: Math.floor(Math.random() * 1000), // 0-1000 kbps\r\n        packetLoss: parseFloat((Math.random() * 5).toFixed(2)), // 0-5 %\r\n      });\r\n    }\r\n    return data;\r\n  };\r\n\r\n  const fetchMetrics = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // Instead of Axios, generate random values\r\n      const randomData = generateRandomMetrics(15); // generate 15 data points\r\n      setMetrics(randomData);\r\n    } catch (err) {\r\n      console.error('Error generating metrics:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMetrics();\r\n  }, []);\r\n\r\n  const chartData = {\r\n    labels: metrics.map((m, i) => `t${i + 1}`),\r\n    datasets: [\r\n      {\r\n        label: 'Latency (ms)',\r\n        data: metrics.map(m => m.latency),\r\n        borderColor: '#0078d4',\r\n        fill: false,\r\n        tension: 0.3,\r\n      },\r\n      {\r\n        label: 'Throughput (kbps)',\r\n        data: metrics.map(m => m.throughput),\r\n        borderColor: '#28a745',\r\n        fill: false,\r\n        tension: 0.3,\r\n      },\r\n      {\r\n        label: 'Packet Loss (%)',\r\n        data: metrics.map(m => m.packetLoss),\r\n        borderColor: '#dc3545',\r\n        fill: false,\r\n        tension: 0.3,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>ðŸ“Š Performance Engine (Random Data)</h1>\r\n\r\n      <SimulateForm onSimulate={fetchMetrics} />\r\n\r\n      {loading && <p>Loading chart...</p>}\r\n\r\n      {metrics.length > 0 && (\r\n        <div className=\"chart\">\r\n          <Line data={chartData} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PerformanceEngine;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}