{"ast":null,"code":"var _jsxFileName = \"D:\\\\protocol-analyzer\\\\client\\\\src\\\\pages\\\\VisualizationDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { io } from 'socket.io-client';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VisualizationDashboard() {\n  _s();\n  const [simulated, setSimulated] = useState([]);\n  const [realtime, setRealtime] = useState([]);\n\n  // ---- Simulated Random Data ----\n  useEffect(() => {\n    const generateSimulated = () => {\n      setSimulated(prev => {\n        const newData = {\n          time: `T${prev.length + 1}`,\n          throughput: Math.floor(Math.random() * 1000) + 500,\n          delay: Math.floor(Math.random() * 100) + 20,\n          packetLoss: parseFloat((Math.random() * 5).toFixed(2))\n        };\n        const updated = [...prev, newData];\n        return updated.slice(-10); // keep last 10 points\n      });\n    };\n    const interval = setInterval(generateSimulated, 3000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // ---- Real-time Data from Server ----\n  useEffect(() => {\n    const socket = io('http://localhost:5000');\n    const handleMetrics = newMetrics => {\n      setRealtime(prev => {\n        const mapped = newMetrics.map((m, i) => ({\n          time: `Live${prev.length + i + 1}`,\n          throughput: m.throughput || 0,\n          delay: m.delay || 0,\n          packetLoss: m.packetLoss || 0\n        }));\n        return [...prev, ...mapped].slice(-10); // last 10 points\n      });\n    };\n    socket.on('protocolMetrics', handleMetrics);\n    return () => {\n      socket.off('protocolMetrics', handleMetrics);\n      socket.disconnect();\n    };\n  }, []);\n  const extract = (arr, key) => arr.map(m => m[key]);\n\n  // ---- Chart Data ----\n  const simulatedData = {\n    labels: simulated.map(s => s.time),\n    datasets: [{\n      label: 'Throughput (kbps)',\n      data: extract(simulated, 'throughput'),\n      borderColor: '#28a745',\n      fill: false,\n      tension: 0.3\n    }, {\n      label: 'Delay (ms)',\n      data: extract(simulated, 'delay'),\n      borderColor: '#ff9900',\n      fill: false,\n      tension: 0.3\n    }, {\n      label: 'Packet Loss (%)',\n      data: extract(simulated, 'packetLoss'),\n      borderColor: '#6f42c1',\n      fill: false,\n      tension: 0.3\n    }]\n  };\n  const realtimeData = {\n    labels: realtime.map(r => r.time),\n    datasets: [{\n      label: 'Throughput (kbps)',\n      data: extract(realtime, 'throughput'),\n      borderColor: '#007bff',\n      fill: false,\n      tension: 0.3\n    }, {\n      label: 'Delay (ms)',\n      data: extract(realtime, 'delay'),\n      borderColor: '#dc3545',\n      fill: false,\n      tension: 0.3\n    }, {\n      label: 'Packet Loss (%)',\n      data: extract(realtime, 'packetLoss'),\n      borderColor: '#17a2b8',\n      fill: false,\n      tension: 0.3\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDCCA Visualization Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Compare simulated and real-time network performance metrics in live mode.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83E\\uDDEA Simulated Data (Random)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          data: simulatedData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This chart shows randomly generated network metrics for testing and comparison purposes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u26A1 Real-Time Data (Live from Server)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          data: realtimeData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This chart displays live network metrics received from the server using Socket.IO.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(VisualizationDashboard, \"1LAkNZRpJ8L8zFp8T7eDHPUc2OU=\");\n_c = VisualizationDashboard;\nexport default VisualizationDashboard;\nvar _c;\n$RefreshReg$(_c, \"VisualizationDashboard\");","map":{"version":3,"names":["React","useEffect","useState","Line","io","jsxDEV","_jsxDEV","VisualizationDashboard","_s","simulated","setSimulated","realtime","setRealtime","generateSimulated","prev","newData","time","length","throughput","Math","floor","random","delay","packetLoss","parseFloat","toFixed","updated","slice","interval","setInterval","clearInterval","socket","handleMetrics","newMetrics","mapped","map","m","i","on","off","disconnect","extract","arr","key","simulatedData","labels","s","datasets","label","data","borderColor","fill","tension","realtimeData","r","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/protocol-analyzer/client/src/pages/VisualizationDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { io } from 'socket.io-client';\r\nimport 'chart.js/auto';\r\n\r\nfunction VisualizationDashboard() {\r\n  const [simulated, setSimulated] = useState([]);\r\n  const [realtime, setRealtime] = useState([]);\r\n\r\n  // ---- Simulated Random Data ----\r\n  useEffect(() => {\r\n    const generateSimulated = () => {\r\n      setSimulated(prev => {\r\n        const newData = {\r\n          time: `T${prev.length + 1}`,\r\n          throughput: Math.floor(Math.random() * 1000) + 500,\r\n          delay: Math.floor(Math.random() * 100) + 20,\r\n          packetLoss: parseFloat((Math.random() * 5).toFixed(2)),\r\n        };\r\n        const updated = [...prev, newData];\r\n        return updated.slice(-10); // keep last 10 points\r\n      });\r\n    };\r\n    const interval = setInterval(generateSimulated, 3000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // ---- Real-time Data from Server ----\r\n  useEffect(() => {\r\n    const socket = io('http://localhost:5000');\r\n\r\n    const handleMetrics = (newMetrics) => {\r\n      setRealtime(prev => {\r\n        const mapped = newMetrics.map((m, i) => ({\r\n          time: `Live${prev.length + i + 1}`,\r\n          throughput: m.throughput || 0,\r\n          delay: m.delay || 0,\r\n          packetLoss: m.packetLoss || 0,\r\n        }));\r\n        return [...prev, ...mapped].slice(-10); // last 10 points\r\n      });\r\n    };\r\n\r\n    socket.on('protocolMetrics', handleMetrics);\r\n\r\n    return () => {\r\n      socket.off('protocolMetrics', handleMetrics);\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const extract = (arr, key) => arr.map(m => m[key]);\r\n\r\n  // ---- Chart Data ----\r\n  const simulatedData = {\r\n    labels: simulated.map(s => s.time),\r\n    datasets: [\r\n      { label: 'Throughput (kbps)', data: extract(simulated, 'throughput'), borderColor: '#28a745', fill: false, tension: 0.3 },\r\n      { label: 'Delay (ms)', data: extract(simulated, 'delay'), borderColor: '#ff9900', fill: false, tension: 0.3 },\r\n      { label: 'Packet Loss (%)', data: extract(simulated, 'packetLoss'), borderColor: '#6f42c1', fill: false, tension: 0.3 },\r\n    ],\r\n  };\r\n\r\n  const realtimeData = {\r\n    labels: realtime.map(r => r.time),\r\n    datasets: [\r\n      { label: 'Throughput (kbps)', data: extract(realtime, 'throughput'), borderColor: '#007bff', fill: false, tension: 0.3 },\r\n      { label: 'Delay (ms)', data: extract(realtime, 'delay'), borderColor: '#dc3545', fill: false, tension: 0.3 },\r\n      { label: 'Packet Loss (%)', data: extract(realtime, 'packetLoss'), borderColor: '#17a2b8', fill: false, tension: 0.3 },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>ðŸ“Š Visualization Dashboard</h1>\r\n      <p>Compare simulated and real-time network performance metrics in live mode.</p>\r\n\r\n      <div className=\"dashboard-grid\">\r\n        <div className=\"chart-card\">\r\n          <h3>ðŸ§ª Simulated Data (Random)</h3>\r\n          <Line data={simulatedData} />\r\n          <p>This chart shows randomly generated network metrics for testing and comparison purposes.</p>\r\n        </div>\r\n\r\n        <div className=\"chart-card\">\r\n          <h3>âš¡ Real-Time Data (Live from Server)</h3>\r\n          <Line data={realtimeData} />\r\n          <p>This chart displays live network metrics received from the server using Socket.IO.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VisualizationDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}