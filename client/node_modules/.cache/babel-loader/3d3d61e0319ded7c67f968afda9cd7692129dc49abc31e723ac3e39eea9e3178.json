{"ast":null,"code":"var _jsxFileName = \"D:\\\\protocol-analyzer\\\\client\\\\src\\\\pages\\\\MetricsCollector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MetricsCollector() {\n  _s();\n  const [metrics, setMetrics] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/metrics/collect').then(res => setMetrics(res.data)).catch(err => console.error('Error fetching metrics:', err));\n  }, []);\n  const labels = metrics.map((_, i) => `t${i + 1}`);\n  const createChart = (label, data, color) => ({\n    labels,\n    datasets: [{\n      label,\n      data,\n      borderColor: color,\n      backgroundColor: `${color}33`,\n      fill: true,\n      tension: 0.3\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDCCA Metrics Collector\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), metrics.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: createChart('Throughput (kbps)', metrics.map(m => m.throughput), '#28a745')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: createChart('Delay (ms)', metrics.map(m => m.delay), '#007bff')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: createChart('Packet Loss (%)', metrics.map(m => m.packetLoss), '#dc3545')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: createChart('Retransmissions', metrics.map(m => m.retransmissions), '#fd7e14')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart\",\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: createChart('Congestion Level (%)', metrics.map(m => m.congestion), '#6f42c1')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading metrics...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(MetricsCollector, \"3FqZ41HS/PZEpujpm699BM0f8kU=\");\n_c = MetricsCollector;\nexport default MetricsCollector;\nvar _c;\n$RefreshReg$(_c, \"MetricsCollector\");","map":{"version":3,"names":["React","useState","useEffect","axios","Line","jsxDEV","_jsxDEV","Fragment","_Fragment","MetricsCollector","_s","metrics","setMetrics","get","then","res","data","catch","err","console","error","labels","map","_","i","createChart","label","color","datasets","borderColor","backgroundColor","fill","tension","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","m","throughput","delay","packetLoss","retransmissions","congestion","_c","$RefreshReg$"],"sources":["D:/protocol-analyzer/client/src/pages/MetricsCollector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Line } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\n\r\nfunction MetricsCollector() {\r\n  const [metrics, setMetrics] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/api/metrics/collect')\r\n      .then(res => setMetrics(res.data))\r\n      .catch(err => console.error('Error fetching metrics:', err));\r\n  }, []);\r\n\r\n  const labels = metrics.map((_, i) => `t${i + 1}`);\r\n\r\n  const createChart = (label, data, color) => ({\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label,\r\n        data,\r\n        borderColor: color,\r\n        backgroundColor: `${color}33`,\r\n        fill: true,\r\n        tension: 0.3,\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>ðŸ“Š Metrics Collector</h1>\r\n\r\n      {metrics.length > 0 ? (\r\n        <>\r\n          <div className=\"chart\">\r\n            <Line data={createChart('Throughput (kbps)', metrics.map(m => m.throughput), '#28a745')} />\r\n          </div>\r\n          <div className=\"chart\">\r\n            <Line data={createChart('Delay (ms)', metrics.map(m => m.delay), '#007bff')} />\r\n          </div>\r\n          <div className=\"chart\">\r\n            <Line data={createChart('Packet Loss (%)', metrics.map(m => m.packetLoss), '#dc3545')} />\r\n          </div>\r\n          <div className=\"chart\">\r\n            <Line data={createChart('Retransmissions', metrics.map(m => m.retransmissions), '#fd7e14')} />\r\n          </div>\r\n          <div className=\"chart\">\r\n            <Line data={createChart('Congestion Level (%)', metrics.map(m => m.congestion), '#6f42c1')} />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <p>Loading metrics...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MetricsCollector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}