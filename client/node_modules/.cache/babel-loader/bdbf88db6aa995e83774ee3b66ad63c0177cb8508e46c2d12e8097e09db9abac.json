{"ast":null,"code":"var _jsxFileName = \"D:\\\\protocol-analyzer\\\\client\\\\src\\\\pages\\\\MetricsCollector.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport jsPDF from \"jspdf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MetricsCollector = ({\n  protocol\n}) => {\n  _s();\n  const [metrics, setMetrics] = useState([]);\n  const [socketInstance, setSocketInstance] = useState(null);\n\n  // Function to generate PDF\n  const generatePDFReport = data => {\n    const doc = new jsPDF();\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.setFontSize(18);\n    doc.setTextColor(0, 51, 102);\n    doc.text(\"📘 Summary Report\", 20, 20);\n    doc.setFontSize(12);\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.setTextColor(0, 0, 0); // Dark text\n\n    doc.text(`Protocol: ${data.protocol}`, 20, 35);\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.text(\"Average Delay:\", 20, 45);\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.text(`${data.avgDelay.toFixed(2)} ms`, 70, 45);\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.text(\"Average Packet Loss:\", 20, 55);\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.text(`${data.avgPacketLoss.toFixed(2)} %`, 70, 55);\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.text(\"Average Throughput:\", 20, 65);\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.text(`${data.avgThroughput.toFixed(2)} kbps`, 70, 65);\n    const isWorking = data.avgDelay < 100 && data.avgPacketLoss < 2 && data.avgThroughput > 0.1;\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.text(\"Conclusion:\", 20, 80);\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.setTextColor(isWorking ? 0 : 200, isWorking ? 128 : 0, 0); // Green/Red\n    doc.text(isWorking ? \"✅ Protocol is working fine and stable.\" : \"⚠️ Protocol is not working properly or unstable.\", 50, 80);\n    doc.save(\"Network_Report.pdf\");\n  };\n  useEffect(() => {\n    const socket = io(\"http://localhost:5000\");\n    setSocketInstance(socket);\n    socket.on(\"metricsData\", data => {\n      setMetrics(prev => {\n        const updated = [...prev, data];\n        if (updated.length >= 10) {\n          socket.disconnect();\n\n          // Calculate averages\n          const avgDelay = updated.reduce((a, b) => a + b.delay, 0) / updated.length;\n          const avgPacketLoss = updated.reduce((a, b) => a + b.packetLoss, 0) / updated.length;\n          const avgThroughput = updated.reduce((a, b) => a + b.throughput, 0) / updated.length;\n\n          // Auto-generate PDF\n          generatePDFReport({\n            protocol,\n            avgDelay,\n            avgPacketLoss,\n            avgThroughput\n          });\n        }\n        return updated.slice(-10); // Keep only 10 latest values\n      });\n    });\n    return () => socket.disconnect();\n  }, [protocol]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"metrics-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Real-Time Metrics for \", protocol]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: metrics.map((m, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Delay: \", m.delay, \" ms | Packet Loss: \", m.packetLoss, \"% | Throughput:\", \" \", m.throughput, \" kbps\"]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(MetricsCollector, \"Pa7ej+wyAu9Igtz7hRk9nzOBuCk=\");\n_c = MetricsCollector;\nexport default MetricsCollector;\nvar _c;\n$RefreshReg$(_c, \"MetricsCollector\");","map":{"version":3,"names":["React","useEffect","useState","io","jsPDF","jsxDEV","_jsxDEV","MetricsCollector","protocol","_s","metrics","setMetrics","socketInstance","setSocketInstance","generatePDFReport","data","doc","setFont","setFontSize","setTextColor","text","avgDelay","toFixed","avgPacketLoss","avgThroughput","isWorking","save","socket","on","prev","updated","length","disconnect","reduce","a","b","delay","packetLoss","throughput","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","m","idx","_c","$RefreshReg$"],"sources":["D:/protocol-analyzer/client/src/pages/MetricsCollector.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport jsPDF from \"jspdf\";\r\n\r\nconst MetricsCollector = ({ protocol }) => {\r\n  const [metrics, setMetrics] = useState([]);\r\n  const [socketInstance, setSocketInstance] = useState(null);\r\n\r\n  // Function to generate PDF\r\n  const generatePDFReport = (data) => {\r\n    const doc = new jsPDF();\r\n    doc.setFont(\"helvetica\", \"bold\");\r\n    doc.setFontSize(18);\r\n    doc.setTextColor(0, 51, 102);\r\n    doc.text(\"📘 Summary Report\", 20, 20);\r\n\r\n    doc.setFontSize(12);\r\n    doc.setFont(\"helvetica\", \"normal\");\r\n    doc.setTextColor(0, 0, 0); // Dark text\r\n\r\n    doc.text(`Protocol: ${data.protocol}`, 20, 35);\r\n\r\n    doc.setFont(\"helvetica\", \"bold\");\r\n    doc.text(\"Average Delay:\", 20, 45);\r\n    doc.setFont(\"helvetica\", \"normal\");\r\n    doc.text(`${data.avgDelay.toFixed(2)} ms`, 70, 45);\r\n\r\n    doc.setFont(\"helvetica\", \"bold\");\r\n    doc.text(\"Average Packet Loss:\", 20, 55);\r\n    doc.setFont(\"helvetica\", \"normal\");\r\n    doc.text(`${data.avgPacketLoss.toFixed(2)} %`, 70, 55);\r\n\r\n    doc.setFont(\"helvetica\", \"bold\");\r\n    doc.text(\"Average Throughput:\", 20, 65);\r\n    doc.setFont(\"helvetica\", \"normal\");\r\n    doc.text(`${data.avgThroughput.toFixed(2)} kbps`, 70, 65);\r\n\r\n    const isWorking =\r\n      data.avgDelay < 100 && data.avgPacketLoss < 2 && data.avgThroughput > 0.1;\r\n\r\n    doc.setFont(\"helvetica\", \"bold\");\r\n    doc.text(\"Conclusion:\", 20, 80);\r\n    doc.setFont(\"helvetica\", \"normal\");\r\n    doc.setTextColor(isWorking ? 0 : 200, isWorking ? 128 : 0, 0); // Green/Red\r\n    doc.text(\r\n      isWorking\r\n        ? \"✅ Protocol is working fine and stable.\"\r\n        : \"⚠️ Protocol is not working properly or unstable.\",\r\n      50,\r\n      80\r\n    );\r\n\r\n    doc.save(\"Network_Report.pdf\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const socket = io(\"http://localhost:5000\");\r\n    setSocketInstance(socket);\r\n\r\n    socket.on(\"metricsData\", (data) => {\r\n      setMetrics((prev) => {\r\n        const updated = [...prev, data];\r\n        if (updated.length >= 10) {\r\n          socket.disconnect();\r\n\r\n          // Calculate averages\r\n          const avgDelay = updated.reduce((a, b) => a + b.delay, 0) / updated.length;\r\n          const avgPacketLoss =\r\n            updated.reduce((a, b) => a + b.packetLoss, 0) / updated.length;\r\n          const avgThroughput =\r\n            updated.reduce((a, b) => a + b.throughput, 0) / updated.length;\r\n\r\n          // Auto-generate PDF\r\n          generatePDFReport({\r\n            protocol,\r\n            avgDelay,\r\n            avgPacketLoss,\r\n            avgThroughput,\r\n          });\r\n        }\r\n        return updated.slice(-10); // Keep only 10 latest values\r\n      });\r\n    });\r\n\r\n    return () => socket.disconnect();\r\n  }, [protocol]);\r\n\r\n  return (\r\n    <div className=\"metrics-container\">\r\n      <h2>Real-Time Metrics for {protocol}</h2>\r\n      <ul>\r\n        {metrics.map((m, idx) => (\r\n          <li key={idx}>\r\n            Delay: {m.delay} ms | Packet Loss: {m.packetLoss}% | Throughput:{\" \"}\r\n            {m.throughput} kbps\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MetricsCollector;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}